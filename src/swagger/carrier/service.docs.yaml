paths:
 /carrier/services:
    post:
      summary: Create a new service
      tags: [Services]
      description: This endpoint creates a new service.
      operationId: createService
      security:
        - bearerAuth: []
      requestBody:
        description: The service's information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreate'
      responses:
        201:
          description: Service created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Retrieve services
      tags: [Services]
      description: This endpoint retrieves all services.
      operationId: getServices
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_number
          schema:
            type: integer
            minimum: 1
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    example: 10
                  page_number:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
 /carrier/services/expiring-summary:
    get:
      summary: Get a services Summary
      tags: [Services]
      description: Use this endpoint to get details about a specific service by its ID.
      operationId: getServicesSummary
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSummary'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
 /carrier/services/{service_id}:
    get:
        summary: Get a service by ID
        tags: [Services]
        description: Use this endpoint to get details about a specific service by its ID.
        operationId: getServiceById
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: service_id
            required: true
            schema:
              type: integer
        responses:
          200:
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Service'
          400:
            $ref: '#/components/responses/BadRequest'
          404:
            $ref: '#/components/responses/NotFound'
          500:
            $ref: '#/components/responses/InternalServerError'
    put:
        summary: Update a service by ID
        tags: [Services]
        description: This endpoint updates a service's details.
        operationId: updateService
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: service_id
            required: true
            schema:
              type: integer
        requestBody:
          description: The service's information
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUpdate'
        responses:
          200:
            description: Service updated successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Service with ID updated successfully
          400:
            $ref: '#/components/responses/BadRequest'
          404:
            $ref: '#/components/responses/NotFound'
          500:
            $ref: '#/components/responses/InternalServerError'

    delete:
        summary: Delete a service by ID
        tags: [Services]
        description: This endpoint deletes a service by its ID.
        operationId: deleteService
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: service_id
            required: true
            schema:
              type: integer
        responses:
          204:
            description: Service removed successfully
          400:
            $ref: '#/components/responses/BadRequest'
          404:
            $ref: '#/components/responses/NotFound'
          500:
            $ref: '#/components/responses/InternalServerError'
